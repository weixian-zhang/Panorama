let AzFwPolicies = AzureActivity
    | extend CallerIP = CallerIpAddress
    | extend ResourceCategory = parse_json(Properties).resourceProviderValue
    | extend ResourceIDSplit = split(_ResourceId, "/")
    | extend PolicyName = iif(tolower(ResourceIDSplit[array_length(ResourceIDSplit) - 2]) == 'firewallpolicies', ResourceIDSplit[array_length(ResourceIDSplit) - 1], ResourceIDSplit[array_length(ResourceIDSplit) - 3])
    | extend RuleName = iif(tolower(ResourceIDSplit[array_length(ResourceIDSplit) - 2]) != 'firewallpolicies', ResourceIDSplit[array_length(ResourceIDSplit) - 1],'')
    | extend ActionNamespace = split(parse_json(Authorization).action, "/")
    | extend ActionType = toupper(ActionNamespace[array_length(ActionNamespace) - 1])
    | extend RequestBody = parse_json(tostring(parse_json(Properties)["requestbody"]))["properties"]
    | where
        CategoryValue == "Administrative" and
        ActivityStatusValue in ("Started", "Success") and
        toupper(OperationNameValue) startswith toupper("Microsoft.Network/firewallPolicies") and //azfw policies
        ResourceCategory !in ("MICROSOFT.RESOURCEHEALTH", "MICROSOFT.RESOURCES") and
        TimeGenerated {TimeRange}
    | join kind=inner ( //join to get all user related info like IsServicePrincipal, role, name from ActivityStatusValue = Success
        AzureActivity
        | where ActivityStatusValue == "Success"
        | extend JoinedAuthorization = Authorization
        | extend JoinedClaims = Claims
        | extend PrincipalType =  parse_json(parse_json(JoinedAuthorization).evidence).principalType
        | extend AppId = parse_json(JoinedClaims)["appid"] //show appid/clientid of registered app if type = ServicePrincipal
        | extend SignInAcctType = iif(PrincipalType == "", "User", PrincipalType)
        | extend RBACRole = parse_json(parse_json(JoinedAuthorization).evidence).role
        | extend SigninUPN = iif(SignInAcctType == "ServicePrincipal", AppId, parse_json(JoinedClaims)["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn"])
        | extend SigninName = iif(SignInAcctType == "ServicePrincipal", AppId, parse_json(JoinedClaims)["name"])
        )
        on CorrelationId, _ResourceId
    | distinct TimeGenerated,
        SubscriptionId,
        ResourceGroup,
        tostring(PolicyName),
        tostring(RuleName),
        OperationName,
        SignInAcctType,
        tostring(RBACRole),
        tostring(SigninUPN),
        tostring(SigninName),
        CorrelationId,
        _ResourceId;
AzFwPolicies
| extend LocalTime = datetime_add('hour', 8, TimeGenerated) //convert to local time Singapore
| project LocalTime, //column ordering
    SubscriptionId,
    ResourceGroup,
    PolicyName,
    RuleName,
    SignInAcctType,
    tostring(RBACRole),
    tostring(SigninUPN),
    tostring(SigninName),
    CorrelationId,
    ResourceId = _ResourceId